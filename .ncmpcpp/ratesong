#!/bin/bash
#
# Modified version for ncmpcpp. Based on:
#
### MPD Ratings ################
# Version 0.1 by Scott Garrett #
# Wintervenom [(at)] gmail.com #
################################
# Dependencies:
# - ncmpcpp
#
# Usage: Save the script to a file, e.g. "ratesong", make it executable.
# Invoke the script with "ratesong [rating]", where rating is a number between 0 and 5.
# 0 will remove the current song from any rating playlist.
# 1-5 will add the current song to the appropriate rating playlist and remove it from all others.

## Be sure to change these to reflect your setup.
library="$HOME/music" # with trailing slash; leave empty for using paths relative to your mpd library
playlists="$HOME/.mpd/playlists"

song=`ncmpcpp --now-playing '%D/%f'`
song="$library$song"

## Prefix and suffix strings for the playlist file name.
pl_prefix='rated'
pl_suffix='.m3u'

## Error cases.
if [[ -z "$song" || "$song" == 'Cannot connect to mpd: Connection refused' ]]; then
    echo 'No song is playing.'
    exit 1
elif [[ "$1" -lt 0 || "$1" -gt 5 ]]; then
    echo "Rating must be between 1 and 5. Or zero to delete the current song's rating."
    exit 1
fi

## Allow only one instance by creating a lock file.
if [[ -f "$playlists/lock" ]]; then
    zenity --info --text="Rating failed!\n\nAnother instance is running." &
    exit 1
fi
touch "$playlists/lock"

## Remove the song from other rating playlists if found.
for n in {1..5}; do
    f="$playlists/${pl_prefix}$n${pl_suffix}"
    tmp="$playlists/tmp.m3u"
    if [[ -f "$f" ]]; then
        cp "$f" "$tmp"
        grep -vF "$song" "$tmp" > "$f"
        rm "$tmp"
        ## Don't do this, it seems to empty rating playlists occasionally:
        #grep -vF "$song" "$f" > "$tmp"
        #mv "$tmp" "$f"
    fi
done

## Append the song to the new rating playlist.
if [[ $1 -ne 0 ]]; then
    f="$playlists/${pl_prefix}$1${pl_suffix}"
    mkdir -p "$playlists"
    echo "$song" >> "$f"
    sort -u "$f" -o "$f"
fi

rm "$playlists/lock"
